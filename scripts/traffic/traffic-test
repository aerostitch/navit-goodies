#!/bin/bash

# This script runs a test suite of routes and traffic messages and stores their output (with and without
# traffic messages present) for comparison.
# Traffic test data must reside in the current directory, and Navit must be running prior to launching
# this script.

# The source dir, into which you checked out the Navit source code.
srcdir=$HOME/src/navit

# The root of the working directory tree.
# In the default config, it is the root for builddir and testcases. It is not used anywhere else.
# You can choose this arbitrarily.
buildroot=$HOME/workspaces/navit

# The build directory, i.e. directory which will hold the binary tree for the platform.
# You can choose this arbitrarily.
builddir=$buildroot/linux-builddir

# The directory in which the compiled Navit binary will be found.
# In most cases this does not need to be modified.
#bindir=$builddir/navit
bindir=$HOME/workspaces/navit/navit-linux/navit

# The Navit configuration file to use.
# Leave this empty to use the default Navit config in bindir.
config=$HOME/src/navit-goodies/config/linux/navit_gpsd.xml

# The directory in which test output (GPX files) will be stored.
# You can choose this arbitrarily.
datadir=$HOME/workspaces/navit/testdata

# The path to the test case specification.
# This should be a path to a text file containing one line for each test case in the following format:
# name start_longitude start_latitude dest_longitude dest_latitude
# Separate parameters with spaces.
testcases=$HOME/src/navit-goodies/scripts/traffic/traffic-testcases.txt


# TODO check for presence of xmlstarlet

# Uncomment the following to start Navit manually.
#cd $bindir
#./navit $config 2>/dev/null &

# give Navit time to start up
#sleep 10

# update external entities for timestamps
echo -e '<!ENTITY now "'`date -Iseconds`'">\n<!ENTITY later "'`date -Iseconds --date="20 minutes"`'">\n' > traffic_entities.xml.inc

while read testcase lng lat dlng dlat;
do
	# skip comment and empty lines
	[[ "$testcase" =~ \#.* ]] && continue
	[[ -z $testcase ]] && continue
	
	xmlstarlet c14n $testcase.xml  > /tmp/$testcase.xml
	xmlstarlet c14n $testcase-cancel.xml  > /tmp/$testcase-cancel.xml

	echo -n "Testing $testcase..."
	# set start and destination
	dbus-send  --print-reply --session --type=method_call --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.navit.set_position string:"geo: $lng $lat" >/dev/null
	dbus-send  --print-reply --session --type=method_call --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.navit.set_destination string:"geo: $dlng $dlat" string:"$testcase" >/dev/null
	# wait until route calculation is complete
	#dbus-send  --print-reply --session --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.route.get_attr string:"route_status"
	# for now we have to use sleep, for which 30 secs should be enough (routing from Warsaw to Lisbon takes ~20 seconds)
	sleep 5
	dbus-send --session --type=method_call --print-reply --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.navit.export_as_gpx string:"$datadir/traffic-route-$testcase-pre.gpx" >/dev/null
	
	# inject traffic messages
	dbus-send --session --type=method_call --print-reply --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.navit.traffic_inject string:"/tmp/$testcase.xml" >/dev/null
	
	# TODO test immediately after injecting messages (is the route updated immediately)?
	
	# set destination again to force route recalculation
	dbus-send  --print-reply --session --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.navit.set_destination string:"geo: $dlng $dlat" string:"$testcase" >/dev/null
	# wait until route calculation is complete
	#dbus-send  --print-reply --session --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.route.get_attr string:"route_status"
	# for now we have to use sleep, for which 30 secs should be enough (routing from Warsaw to Lisbon takes ~20 seconds)
	sleep 5
	dbus-send --session --type=method_call --print-reply --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.navit.export_as_gpx string:"$datadir/traffic-route-$testcase-post.gpx" >/dev/null
	
	# inject cancellation messages
	dbus-send --session --type=method_call --print-reply --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.navit.traffic_inject string:"/tmp/$testcase-cancel.xml" >/dev/null
	echo " done"
done < $testcases

